[{"D:\\my-github\\react\\src\\index.js":"1","D:\\my-github\\react\\src\\TodoList.js":"2","D:\\my-github\\react\\src\\TodoItem.js":"3","D:\\my-github\\react\\src\\components\\Board.js":"4","D:\\my-github\\react\\src\\components\\Square.js":"5","D:\\my-github\\react\\src\\components\\Game.js":"6","D:\\my-github\\react\\src\\home.js":"7","D:\\my-github\\react\\src\\components\\fuzisun.js":"8","D:\\my-github\\react\\src\\components\\Fuzisun.js":"9","D:\\my-github\\react\\src\\components\\State.js":"10","D:\\my-github\\react\\src\\components\\Tab.js":"11","D:\\my-github\\react\\src\\components\\Props.js":"12","D:\\my-github\\react\\src\\components\\Props2.js":"13","D:\\my-github\\react\\src\\components\\Xuanran.js":"14","D:\\my-github\\react\\src\\components\\List.js":"15","D:\\my-github\\react\\src\\components\\Shengming.js":"16","D:\\my-github\\react\\src\\components\\List2.js":"17","D:\\my-github\\react\\src\\components\\Form.js":"18","D:\\my-github\\react\\src\\hook\\Hook.js":"19","D:\\my-github\\react\\src\\hook\\StateHook.js":"20","D:\\my-github\\react\\src\\hook\\ContextHook.js":"21","D:\\my-github\\react\\src\\hook\\EffectHook.js":"22","D:\\my-github\\react\\src\\hook\\ReducerHook.js":"23","D:\\my-github\\react\\src\\hook\\CallbackHook.js":"24","D:\\my-github\\react\\src\\hook\\UseHook.js":"25","D:\\my-github\\react\\src\\hook\\EffectHookTwo.js":"26","D:\\my-github\\react\\src\\hook\\ContextHookTwo.js":"27","D:\\my-github\\react\\src\\hook\\ReducerHookTwo.js":"28","D:\\my-github\\react\\src\\hook\\UseRefHook.js":"29"},{"size":1392,"mtime":1610372951775,"results":"30","hashOfConfig":"31"},{"size":1716,"mtime":1608080125183,"results":"32","hashOfConfig":"33"},{"size":675,"mtime":1608080125182,"results":"34","hashOfConfig":"33"},{"size":964,"mtime":1608646415444,"results":"35","hashOfConfig":"33"},{"size":652,"mtime":1608631437868,"results":"36","hashOfConfig":"33"},{"size":2874,"mtime":1608704871778,"results":"37","hashOfConfig":"33"},{"size":312,"mtime":1608713849395,"results":"38","hashOfConfig":"33"},{"size":311,"mtime":1608792655345,"results":"39","hashOfConfig":"33"},{"size":311,"mtime":1608792655345,"results":"40","hashOfConfig":"33"},{"size":760,"mtime":1608793603513,"results":"41","hashOfConfig":"33"},{"size":788,"mtime":1608795156221,"results":"42","hashOfConfig":"33"},{"size":1387,"mtime":1608966974084,"results":"43","hashOfConfig":"33"},{"size":1195,"mtime":1608798871917,"results":"44","hashOfConfig":"33"},{"size":639,"mtime":1608799850353,"results":"45","hashOfConfig":"33"},{"size":2094,"mtime":1608963019238,"results":"46","hashOfConfig":"33"},{"size":2305,"mtime":1608960469409,"results":"47","hashOfConfig":"33"},{"size":909,"mtime":1608962657633,"results":"48","hashOfConfig":"33"},{"size":1241,"mtime":1608970760650,"results":"49","hashOfConfig":"33"},{"size":749,"mtime":1610548372715,"results":"50","hashOfConfig":"31"},{"size":1678,"mtime":1610543480194,"results":"51","hashOfConfig":"31"},{"size":939,"mtime":1610372951763,"results":"52","hashOfConfig":"31"},{"size":1611,"mtime":1610372951765,"results":"53","hashOfConfig":"31"},{"size":1411,"mtime":1610372951768,"results":"54","hashOfConfig":"31"},{"size":3533,"mtime":1610372951762,"results":"55","hashOfConfig":"31"},{"size":504,"mtime":1610372951772,"results":"56","hashOfConfig":"31"},{"size":552,"mtime":1610545180564,"results":"57","hashOfConfig":"31"},{"size":1019,"mtime":1610546425335,"results":"58","hashOfConfig":"31"},{"size":495,"mtime":1610547208930,"results":"59","hashOfConfig":"31"},{"size":532,"mtime":1610548399364,"results":"60","hashOfConfig":"31"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"14gb2lz",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"6wr1o8",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"63"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"63"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\my-github\\react\\src\\index.js",[],["128","129"],"D:\\my-github\\react\\src\\TodoList.js",[],["130","131"],"D:\\my-github\\react\\src\\TodoItem.js",[],"D:\\my-github\\react\\src\\components\\Board.js",[],"D:\\my-github\\react\\src\\components\\Square.js",[],"D:\\my-github\\react\\src\\components\\Game.js",[],"D:\\my-github\\react\\src\\home.js",[],"D:\\my-github\\react\\src\\components\\fuzisun.js",[],"D:\\my-github\\react\\src\\components\\Fuzisun.js",[],["132","133"],"D:\\my-github\\react\\src\\components\\State.js",[],"D:\\my-github\\react\\src\\components\\Tab.js",[],"D:\\my-github\\react\\src\\components\\Props.js",[],"D:\\my-github\\react\\src\\components\\Props2.js",[],["134","135"],"D:\\my-github\\react\\src\\components\\Xuanran.js",[],["136","137"],"D:\\my-github\\react\\src\\components\\List.js",["138","139"],"import React from \"react\"\r\n\r\nclass Item extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  onClick() {\r\n    this.props.onClick(this.props.index)\r\n  }\r\n  render() {\r\n    return (\r\n      <li className='liList' onClick={() => this.onClick()}>\r\n        <span>{this.props.index}</span>\r\n        <span>{this.props.item.name}</span>\r\n        <span>{this.props.item.desc}</span>\r\n      </li>\r\n    )\r\n  }\r\n}\r\n\r\nclass List extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      list: [\r\n        {\r\n          index: \"序号\",\r\n          name: \"姓名\",\r\n          desc: \"描述\"\r\n        },\r\n        {\r\n          index: \"1\",\r\n          name: \"zxx\",\r\n          desc: \"zxx \"\r\n        },\r\n        {\r\n          index: \"2\",\r\n          name: \"lcc\",\r\n          desc: \"lcc \"\r\n        },\r\n        {\r\n          index: \"3\",\r\n          name: \"lyy\",\r\n          desc: \"lyy \"\r\n        }\r\n      ]\r\n    }\r\n  }\r\n  onAlert(index) {\r\n    alert(index)\r\n  }\r\n  render() {\r\n    // map 生成新的数组\r\n    let items = this.state.list.map((item, index) => {\r\n      // return (\r\n        <Item item={item} key={index} index={item.index} onClick={(index) => this.onAlert(index)}></Item>\r\n      // )\r\n    })\r\n    return (\r\n      <div>\r\n        <ul>\r\n          {items}\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n// 数组遍历\r\nlet arr1 = [1, 2, 3, 4, 5];\r\n// foreach相当于for循环\r\narr1.forEach((item, index, arr) => {\r\n  console.log(item, index, arr, \"1\");\r\n})\r\n\r\n// map返回一个新数组\r\nlet arr2 = arr1.map((item, index) => {\r\n  let newItem = item + index;\r\n  return newItem;\r\n})\r\n\r\nconsole.log(arr2, \"2\")\r\n\r\n\r\n// filter  过滤\r\nlet arr3 = arr1.filter(item => item > 2);\r\nconsole.log(arr3, \"3\")\r\n\r\n// reduce 对整个数据进行整合，比如要将数组中的数字进行相加，\r\nlet arr4 = arr1.reduce((pre, next, index) => {\r\n  let result = pre + next;\r\n  return result\r\n})\r\nconsole.log(arr4, \"4\")\r\n\r\n\r\n// for  in   遍历对象\r\n\r\n// for  of   遍历数组，类数组的对象，字符串，\r\nexport default List;\r\n\r\n","D:\\my-github\\react\\src\\components\\Shengming.js",[],["140","141"],"D:\\my-github\\react\\src\\components\\List2.js",["142"],"D:\\my-github\\react\\src\\components\\Form.js",[],"D:\\my-github\\react\\src\\hook\\Hook.js",[],"D:\\my-github\\react\\src\\hook\\StateHook.js",[],"D:\\my-github\\react\\src\\hook\\ContextHook.js",[],"D:\\my-github\\react\\src\\hook\\EffectHook.js",[],"D:\\my-github\\react\\src\\hook\\ReducerHook.js",["143"],"import React, { useReducer } from 'react'\r\n// useState 的替代方案。它接收一个形如 (state, action) => newState 的 reducer，并返回当前的 state 以及与其配套的 dispatch 方法\r\n// 在某些场景下，useReducer 会比 useState 更适用，例如 state 逻辑较复杂且包含多个子值，或者下一个 state 依赖于之前的 state 等。\r\n// 并且，使用 useReducer 还能给那些会触发深更新的组件做性能优化，因为你可以向子组件传递 dispatch 而不是回调函数\r\n\r\nconst initialCount = 1;\r\n\r\n// 重置\r\nfunction init(initialCount) {\r\n  return { count: initialCount };\r\n}\r\n\r\n// 方法函数\r\nfunction reducer(stateNew, action) {\r\n  switch (action.type) {\r\n    case '1':\r\n      return { count: stateNew.count - 1 };\r\n    case '2':\r\n      return { count: stateNew.count + 1 };\r\n    case '3':\r\n      return init(action.reset);\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\n// useReducer\r\nfunction Counter( {initialCount}) {\r\n  const [state, dispatch] = useReducer(reducer, initialCount, init);\r\n  console.log(state, \"state\")\r\n  return (\r\n    <div>\r\n      count: {state.count}\r\n      <button onClick={() => dispatch({ type: '3', reset: initialCount })}>reset</button>\r\n      <button onClick={() => dispatch({ type: '1' })}>-</button>\r\n      <button onClick={() => dispatch({ type: '2' })}>+</button>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Counter","D:\\my-github\\react\\src\\hook\\CallbackHook.js",["144"],"import React, { memo, useCallback, useState } from 'react'\r\n\r\n// const CallbackHook = memo(() => {\r\n//   const [currentVal, setCurrentVal] = useState(\"\");\r\n\r\n//   const memoizedCallback = useCallback(\r\n//     (index) => {\r\n//       // if (currentVal !== index) {\r\n//         console.log(index,\"1\")\r\n//         setCurrentVal(index)\r\n//       // }\r\n//     },\r\n//     [currentVal],\r\n//   );\r\n\r\n//   // const memoizedCallback = (index) => {\r\n//   //   console.log(index,\"1\")\r\n//   //   setCurrentVal(index)\r\n//   // }\r\n//   return (\r\n//     <div>\r\n//       {currentVal}\r\n//       <button onClick={() => memoizedCallback(\"\")}>change</button>\r\n//     </div>\r\n//   )\r\n// })\r\n\r\n\r\n// https://zhuanlan.zhihu.com/p/56975681  React.memo 和 React.useCallback 一定记得需要配对使用，缺了一个都可能导致性能不升反“降”，毕竟无意义的浅比较也是要消耗那么一点点点的性能。\r\n// \r\n\r\n// 这里没有使用useCallback, 点击子组件1，子组件2也会重新渲染；相反也是一样的；\r\n// function PageA(props) {\r\n//   console.log(props, \"PageA\")\r\n//   const { onClick, children } = props;\r\n//   return <div onClick={onClick}>{children}</div>\r\n// }\r\n// const PageA = memo((props) => {\r\n//   console.log(props, \"PageA\")\r\n//   const { onClick, children } = props;\r\n//   return <div onClick={onClick}>{children}</div>\r\n// })\r\n// function PageB(props) {\r\n//   console.log(props,\"props.name\")\r\n//   return <div onClick={props.onClick}>{props.name}</div>\r\n// }\r\n// 使用memo包裹PageB组件\r\n// const PageB = memo((props) => {\r\n//   console.log(props, \"PageB\")\r\n//   return <div onClick={props.onClick}>{props.name}</div>\r\n// })\r\n// function CallbackHook() {\r\n//   const [a, setA] = useState(0);\r\n//   const [b, setB] = useState(0);\r\n//   const handleClick1 = useCallback(() => {\r\n//     setA(a + 1)\r\n//   }, [a])\r\n//   const handleClick2 = useCallback(() => {\r\n//     setB(b + 1)\r\n//   }, [b])\r\n\r\n//   return (\r\n//     <div>\r\n//       <PageA onClick={handleClick1}>{a}</PageA>\r\n//       <PageB onClick={handleClick2} name={b}></PageB>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n\r\n\r\n// 不要过度使用React.useCallback()，应该是子组件非常耗时的时候，才考虑缓存回调函数；\r\n// 这里子组件渲染了一个项目列表，列表很大，有几百个项目，这市就可以考虑使用memo封装，\r\nconst MyBigList = memo((props) => {\r\n  const { items, handleClick } = props;\r\n  console.log(handleClick,\"222\")\r\n  const lists = items.map((item, index) => {\r\n    return (<li key={index} onClick={() => handleClick()}>{item.name}</li>)\r\n  })\r\n  return <div>{lists}</div>\r\n})\r\n\r\n\r\n// 这里说只要term不变，useCallback就会返回相同的函数对象\r\n// handleClick只和term有关(还是不太懂，是否用useCallback包裹，好像都一样)\r\nfunction CallbackHook() {\r\n  const [term, setTerm] = useState(\"term\")\r\n  const handleClick = useCallback((item) => {\r\n    console.log('you click', item)\r\n  }, [term]);\r\n  // const handleClick = (item) => {\r\n  //   console.log('you click', item)\r\n  // };\r\n  const items = [{\r\n    name: \"1\"\r\n  }, {\r\n    name: \"1\"\r\n  }, {\r\n    name: \"1\"\r\n  }, {\r\n    name: \"1\"\r\n  }, {\r\n    name: \"1\"\r\n  }, {\r\n    name: \"1\"\r\n  }, {\r\n    name: \"1\"\r\n  }, {\r\n    name: \"1\"\r\n  }, {\r\n    name: \"1\"\r\n  }, {\r\n    name: \"1\"\r\n  },]\r\n  return (\r\n    <div>\r\n      {term}\r\n      <button onClick={() => setTerm(\"term123\")}>changeTerm</button>\r\n      <MyBigList items={items} handleClick={handleClick}></MyBigList>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CallbackHook;","D:\\my-github\\react\\src\\hook\\UseHook.js",[],"D:\\my-github\\react\\src\\hook\\EffectHookTwo.js",["145"],"D:\\my-github\\react\\src\\hook\\ContextHookTwo.js",[],"D:\\my-github\\react\\src\\hook\\ReducerHookTwo.js",["146"],"D:\\my-github\\react\\src\\hook\\UseRefHook.js",[],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"147","replacedBy":"151"},{"ruleId":"149","replacedBy":"152"},{"ruleId":"147","replacedBy":"153"},{"ruleId":"149","replacedBy":"154"},{"ruleId":"147","replacedBy":"155"},{"ruleId":"149","replacedBy":"156"},{"ruleId":"147","replacedBy":"157"},{"ruleId":"149","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":4,"column":3,"nodeType":"161","messageId":"162","endLine":6,"endColumn":4},{"ruleId":"163","severity":1,"message":"164","line":54,"column":51,"nodeType":"165","messageId":"166","endLine":54,"endColumn":53},{"ruleId":"147","replacedBy":"167"},{"ruleId":"149","replacedBy":"168"},{"ruleId":"159","severity":1,"message":"160","line":38,"column":3,"nodeType":"161","messageId":"162","endLine":40,"endColumn":4},{"ruleId":"169","severity":1,"message":"170","line":6,"column":7,"nodeType":"171","messageId":"172","endLine":6,"endColumn":19},{"ruleId":"173","severity":1,"message":"174","line":90,"column":6,"nodeType":"175","endLine":90,"endColumn":12,"suggestions":"176"},{"ruleId":"173","severity":1,"message":"177","line":10,"column":6,"nodeType":"175","endLine":10,"endColumn":8,"suggestions":"178"},{"ruleId":"179","severity":1,"message":"180","line":10,"column":7,"nodeType":"181","messageId":"182","endLine":10,"endColumn":18},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],["183"],["184"],["183"],["184"],["183"],["184"],["183"],["184"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["183"],["184"],"no-unused-vars","'initialCount' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has an unnecessary dependency: 'term'. Either exclude it or remove the dependency array.","ArrayExpression",["185"],"React Hook useEffect has missing dependencies: 'callback' and 'time'. Either include them or remove the dependency array.",["186"],"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","no-global-assign","no-unsafe-negation",{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},"Update the dependencies array to be: []",{"range":"191","text":"192"},"Update the dependencies array to be: [callback, time]",{"range":"193","text":"194"},[2560,2566],"[]",[223,225],"[callback, time]"]